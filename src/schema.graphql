type Query {
    Teams: [Team]
    Team(id: ID): Team
    Players: [Player]
    Player(id: ID): Player
    Fixtures: [Fixture]
    Fixture(id: ID): [Fixture]
    Results: [Result]
    Result(id: ID): [Result]
    # Live Match
    LiveMatch: [Match]
    Report(reporter: ID): Match

    News: [News]
    OneNews(id: ID): News
    Table: [Table]
    onTable(id: ID): [Table]
    NextGame: Fixture
    #Squad
    Squad(id: ID): [Player]
    # Club Statis
    CWinStatis: [Table]
    CLossStatis: [Table]
    GoalsStatis: [Table]
}

type Subscription{
    count: Int!
    Time: Time
}

type Mutation {
    Team(
        name: String!,
        image: String!,
        stadium: String!
    ): Team
    Player(
        name: String,
        team: String,
        number: String,
        nationality: String,
        age: String,
        dob: String,
        height: String,
        position: String
    ): Player
    Fixture(
        date: String!,
        home: ID!,
        away: ID!
    ): Fixture

    Results(
        season: String!,
        date: String!,
        home: ID!,
        away: ID!,
        homeGoals: String!,
        awayGoals: String!
    ): Result

    LiveMatch(
        date: String!,
        home: ID!,
        away: ID!,
        reporter: ID!
    ): Match

    # Home Line-up
    HomeLineUp(
        _id: String
        starting: [String]
    ):Match

    # Home Sub
    HomeSub(
        _id: String
        Substitutes: [String]
    ):Match

    # Away Line-up
    AwayLineUp(
        _id: String
        starting: [String]
    ):Match

    # Home Sub
    AwaySub(
        _id: String
        Substitutes: [String]
    ):Match

    # Away Substitutions
    AwaySubstitutions(
        _id: String
        in: String
        out: String
    ):Match

    # Home Substitutions
    HomeSubstitutions(
        _id: String
        in: String
        out: String
    ):Match

    # Match Details
    MatchDetails(
        _id: String!
        action: String!
        player: String!
        team: String!
        time: String!
    ):Match
    LiveTime(
        id: ID!,
        time: Int!
    ): Match

    # Table
    Table(
        season: String!,
        team: String,
        gf: Int,
        ga: Int,
        status: String
        result: String        
    ): Table

    # News
    News(
        title: String,
        subTitle: String,
        news: String,
        image: String
    ): News
}

type Team {
    _id: ID
    name: String
    image: String
    stadium: String
    staff: [Staff]
    games: [Game]
}

type Time {
    _id: ID
    time: String
}

type Player {
    _id: ID
    name: String
    team: Team
    number: String
    nationality: String
    age: String
    dob: String
    height: String
    position: String
    appearances: String
    subs: String
    cleanSheets: String
    goals: String
    assists: String
}

type Table {
    _id: ID
    table: [TB]
}

type TB {
    team: Team
    played: Int
    win: Int
    draw: Int
    lost: Int
    gf: Int
    ga: Int
    gd: String
    form: [Form]
    point: Int
    pos: Int
}

type Fixture {
    _id: ID
    date: String
    games: [Game]
}

type Staff {
    role: String
    name: String
}

type Form {
    _id: ID
    status: String
    result: [Result]
}

type Statistics {
    onTarget: Stat
    offTarget: Stat
    possession: Stat
    corners: Stat
    offsides: Stat
    fouls: Stat
    goalKicks: Stat
}

type Stat {
    home: String
    away: String
}

type News {
    _id: ID
    date: String
    title: String
    subTitle: String
    news: String
    image: String
}

type Home {
    _id: ID
    name: String
    image: String
    stadium: String
}

type Away {
    _id: ID
    name: String
    image: String
}


# Result
type Result {
    _id: ID
    date: String
    season: String
    games: [Game]
}

# Game
type Game {
    _id: ID
    home: Home
    away: Away
    homeGoals: String
    awayGoals: String
}

# Live Match
type Match{
    _id: ID
    date: String
    time: Int
    reporter: String
    home: Home
    away: Away
    lineUp: LineUps
    matchDetails: [MatchDetails]
}

type LineUps {
    home: HomeLineUp
    away: AwayLineUp
}

type HomeLineUp {
    Starting: [String]
    Substitutes: [String]
    Substitutions: [Substitutions]
}

type AwayLineUp {
    Starting: [String]
    Substitutes: [String]
    Substitutions: [Substitutions]
}

type Substitutions {
    in: String
    out: String
}

type MatchDetails {
    action: String
    player: String
    team: String
    time: String
}
